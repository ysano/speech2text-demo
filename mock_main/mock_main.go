// Code generated by MockGen. DO NOT EDIT.
// Source: speech2text.go

// Package mock_main is a generated GoMock package.
package mock_main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	speech "google.golang.org/genproto/googleapis/cloud/speech/v1"
)

// MockIGetTrans is a mock of IGetTrans interface.
type MockIGetTrans struct {
	ctrl     *gomock.Controller
	recorder *MockIGetTransMockRecorder
}

// MockIGetTransMockRecorder is the mock recorder for MockIGetTrans.
type MockIGetTransMockRecorder struct {
	mock *MockIGetTrans
}

// NewMockIGetTrans creates a new mock instance.
func NewMockIGetTrans(ctrl *gomock.Controller) *MockIGetTrans {
	mock := &MockIGetTrans{ctrl: ctrl}
	mock.recorder = &MockIGetTransMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIGetTrans) EXPECT() *MockIGetTransMockRecorder {
	return m.recorder
}

// GetTrans mocks base method.
func (m *MockIGetTrans) GetTrans(stream speech.Speech_StreamingRecognizeClient, audioFile string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTrans", stream, audioFile)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetTrans indicates an expected call of GetTrans.
func (mr *MockIGetTransMockRecorder) GetTrans(stream, audioFile interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTrans", reflect.TypeOf((*MockIGetTrans)(nil).GetTrans), stream, audioFile)
}
